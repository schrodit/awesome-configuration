###################
# ALIAS FUNCTIONS #
###################

# needed to use aliases in watch commands
alias watch='watch '

########################
# CLIPBOARD Linux only #
########################
alias pbcopy='xsel --clipboard --input'
alias pbpaste='xsel --clipboard --output'

########
# Arch #
########
alias pacmanclean='sudo pacman -Rsn $(pacman -Qdtq)'

#######
# Git #
#######
function gp() {
    if [ "master" = "$(git branch --show-current)" ]; then
        echo "NOT pushing: current branch is: master."
    else
        git push origin HEAD $*
    fi
}

##############
# KUBERNETES #
##############

alias k="kubectl"
alias kns="kubectl ns"
alias kx="switch"
alias kxc="switch --kubeconfig-path "

alias kg='kubectl get'
alias kd='kubectl describe'

alias ks="kubectl -n kube-system"
alias ksg='ks get'
alias ksd="ks describe"

alias kg='kubectl -n garden'
alias kl='kubectl -n ls-system'
alias kd='kubectl -n default'
alias kgg='kg get'
alias kgd='kg describe'

alias kall='kubectl api-resources --verbs=list -o name | xargs -n 1 kubectl get --show-kind --ignore-not-found -o name'
alias kalln='kubectl api-resources --verbs=list --namespaced -o name | xargs -n 1 kubectl get --show-kind --ignore-not-found -o name'

alias kwkind='export KUBECONFIG="$(kind get kubeconfig-path --name="kind")"'

alias ktmp='pbpaste > /tmp/.kubeconfig && kxc /tmp/.kubeconfig'

function kwsec() {
  kubectl ksd get secret $1 -ojson | jq -r '.stringData.kubeconfig' | pbcopy
}

########
# Helm #
########

function migratetohelm() {
  KIND=$1
  NAME=$2
  if [ -z "$RELEASE" ]; then
    if [ -z "$3" ]; then
      echo "RELEASE not set!"
      return 1
    fi 
    RELEASE=$3
  fi
  NAMESPACE=$(k config view -o jsonpath="{.contexts[?(@.name == \"$(kubectl config current-context)\")].context.namespace}")

  kubectl annotate $KIND $NAME meta.helm.sh/release-name=$RELEASE --overwrite
  kubectl annotate $KIND $NAME meta.helm.sh/release-namespace=$NAMESPACE --overwrite
  kubectl label $KIND $NAME app.kubernetes.io/managed-by=Helm
}

# ops
alias kops="/usr/local/bin/ops-pod"

# Commponent-cli
alias ccli="component-cli"
